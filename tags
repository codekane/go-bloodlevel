!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!DTD	E,entity	/entities/
!_TAG_KIND_DESCRIPTION!DTD	a,attribute	/attributes/
!_TAG_KIND_DESCRIPTION!DTD	e,element	/elements/
!_TAG_KIND_DESCRIPTION!DTD	n,notation	/notations/
!_TAG_KIND_DESCRIPTION!DTD	p,parameterEntity	/parameter entities/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!DTD	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/dream/go/src/bloodlevel/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!DTD!element	attOwner	/attributes owner/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	condition	/conditions/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	elementName	/element names/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	partOfAttDef	/part of attribute definition/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
CreatedAt	model/doseModel.go	/^  CreatedAt time.Time `json:"created_at"`$/;"	m	struct:model.Dose	typeref:typename:time.Time
Database	model/database.go	/^func Database() (*gorm.DB, error) {$/;"	f	package:model	typeref:typename:(*gorm.DB, error)
Date	dose/doseService.go	/^  Date string `json:"date" binding:"required"`$/;"	m	struct:dose.NewDose	typeref:typename:string
Date	dose/doseService.go	/^  Date string `json:"date"`$/;"	m	struct:dose.DoseUpdate	typeref:typename:string
Date	model/doseModel.go	/^  Date string `json:"date"`$/;"	m	struct:model.Dose	typeref:typename:string
DeleteDose	dose/doseService.go	/^func DeleteDose(c *gin.Context) {$/;"	f	package:dose
DeletedAt	model/doseModel.go	/^  DeletedAt gorm.DeletedAt `gorm:"indes" json:"deleted_at"`$/;"	m	struct:model.Dose	typeref:typename:gorm.DeletedAt
Dosage	dose/doseService.go	/^  Dosage int `json:"dosage" binding:"required"`$/;"	m	struct:dose.NewDose	typeref:typename:int
Dosage	dose/doseService.go	/^  Dosage int `json:"dosage"`$/;"	m	struct:dose.DoseUpdate	typeref:typename:int
Dosage	model/doseModel.go	/^  Dosage int `json:"dosage"`$/;"	m	struct:model.Dose	typeref:typename:int
Dosage_Unit	dose/doseService.go	/^  Dosage_Unit string `json:"dosage_unit" binding:"required"`$/;"	m	struct:dose.NewDose	typeref:typename:string
Dosage_Unit	dose/doseService.go	/^  Dosage_Unit string `json:"dosage_unit"`$/;"	m	struct:dose.DoseUpdate	typeref:typename:string
Dosage_Unit	model/doseModel.go	/^  Dosage_Unit string `json:"dosage_unit"`$/;"	m	struct:model.Dose	typeref:typename:string
Dose	model/doseModel.go	/^type Dose struct {$/;"	s	package:model
DoseUpdate	dose/doseService.go	/^type DoseUpdate struct  {$/;"	s	package:dose
GetDose	dose/doseService.go	/^func GetDose(c *gin.Context) {$/;"	f	package:dose
GetDoses	dose/doseService.go	/^func GetDoses(c *gin.Context) {$/;"	f	package:dose
ID	model/doseModel.go	/^  ID uint `gorm:"primaryKey" json:"id"`$/;"	m	struct:model.Dose	typeref:typename:uint
Model	model/ROI.go	/^  gorm.Model$/;"	M	struct:model.ROI	typeref:typename:gorm.Model
Name	model/ROI.go	/^  Name                          string$/;"	m	struct:model.ROI	typeref:typename:string
NewDose	dose/doseService.go	/^type NewDose struct {$/;"	s	package:dose
PostDose	dose/doseService.go	/^func PostDose(c *gin.Context) {$/;"	f	package:dose
ROI	model/ROI.go	/^type ROI struct {$/;"	s	package:model
Substance	dose/doseService.go	/^  Substance string `json:"substance" binding:"required"`$/;"	m	struct:dose.NewDose	typeref:typename:string
Substance	dose/doseService.go	/^  Substance string `json:"substance"`$/;"	m	struct:dose.DoseUpdate	typeref:typename:string
Substance	model/doseModel.go	/^  Substance string `json:"substance"`$/;"	m	struct:model.Dose	typeref:typename:string
Time	dose/doseService.go	/^  Time string `json:"time" binding:"required"`$/;"	m	struct:dose.NewDose	typeref:typename:string
Time	dose/doseService.go	/^  Time string `json:"time"`$/;"	m	struct:dose.DoseUpdate	typeref:typename:string
Time	model/doseModel.go	/^  Time string `json:"time"`$/;"	m	struct:model.Dose	typeref:typename:string
UpdateDose	dose/doseService.go	/^func UpdateDose(c *gin.Context) {$/;"	f	package:dose
UpdatedAt	model/doseModel.go	/^  UpdatedAt time.Time `json:"updated_at"`$/;"	m	struct:model.Dose	typeref:typename:time.Time
dose	dose/doseService.go	/^package dose$/;"	p
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
model	model/ROI.go	/^package model$/;"	p
model	model/database.go	/^package model$/;"	p
model	model/doseModel.go	/^package model$/;"	p
